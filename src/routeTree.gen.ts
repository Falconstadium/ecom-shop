/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserImport } from './routes/user'
import { Route as ContactImport } from './routes/contact'
import { Route as CollectionImport } from './routes/collection'
import { Route as ChekoutImport } from './routes/chekout'
import { Route as CartImport } from './routes/cart'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const UserRoute = UserImport.update({
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const CollectionRoute = CollectionImport.update({
  path: '/collection',
  getParentRoute: () => rootRoute,
} as any)

const ChekoutRoute = ChekoutImport.update({
  path: '/chekout',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/chekout': {
      id: '/chekout'
      path: '/chekout'
      fullPath: '/chekout'
      preLoaderRoute: typeof ChekoutImport
      parentRoute: typeof rootRoute
    }
    '/collection': {
      id: '/collection'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof CollectionImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/chekout': typeof ChekoutRoute
  '/collection': typeof CollectionRoute
  '/contact': typeof ContactRoute
  '/user': typeof UserRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/chekout': typeof ChekoutRoute
  '/collection': typeof CollectionRoute
  '/contact': typeof ContactRoute
  '/user': typeof UserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cart': typeof CartRoute
  '/chekout': typeof ChekoutRoute
  '/collection': typeof CollectionRoute
  '/contact': typeof ContactRoute
  '/user': typeof UserRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cart'
    | '/chekout'
    | '/collection'
    | '/contact'
    | '/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cart'
    | '/chekout'
    | '/collection'
    | '/contact'
    | '/user'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cart'
    | '/chekout'
    | '/collection'
    | '/contact'
    | '/user'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CartRoute: typeof CartRoute
  ChekoutRoute: typeof ChekoutRoute
  CollectionRoute: typeof CollectionRoute
  ContactRoute: typeof ContactRoute
  UserRoute: typeof UserRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CartRoute: CartRoute,
  ChekoutRoute: ChekoutRoute,
  CollectionRoute: CollectionRoute,
  ContactRoute: ContactRoute,
  UserRoute: UserRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cart",
        "/chekout",
        "/collection",
        "/contact",
        "/user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/chekout": {
      "filePath": "chekout.tsx"
    },
    "/collection": {
      "filePath": "collection.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/user": {
      "filePath": "user.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
